#include "vmlinux.h"
#include <bpf/bpf_helpers.h>
#include <bpf/bpf_tracing.h>

struct
{
    __uint(type, BPF_MAP_TYPE_PERCPU_ARRAY);
    __uint(max_entries, 1);
    __type(key, __u32);
    __type(value, __u64);
} mem_events SEC(".maps");

SEC("tracepoint/kmem/mm_page_alloc")
int trace_mem_alloc(struct trace_event_raw_mm_page_alloc *ctx)
{
    __u32 key = 0;
    __u64 *val = bpf_map_lookup_elem(&mem_events, &key);
    if (val)
    {
        __sync_fetch_and_add(val, ctx->order); // simplistic
    }
    return 0;
}

char LICENSE[] SEC("license") = "GPL";
